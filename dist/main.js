/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("let tasks = []\r\nconst container = document.getElementsByClassName('container')[0]\r\nlet modalInfo\r\nmodalInfo = taskInfoModal();\r\ndocument.body.appendChild(modalInfo);\r\nconst modallEdit = modalEdit();  \r\ndocument.body.appendChild(modallEdit);\r\n\r\n\r\n\r\nconst Task = (title,description,dueDate,priority) =>{\r\n    return {title,description,dueDate,priority}\r\n}\r\n\r\n\r\nfunction addTask(){\r\n    const title = document.getElementById('title-input').value\r\n    const description = document.getElementById('description').value\r\n    const dueDate = document.getElementById('due-date').value\r\n    const priority = document.getElementById('priority').value\r\n\r\n    tasks.push(Task(title,description,dueDate,priority))\r\n\r\n    const taskContainer = document.createElement('div')\r\n    taskContainer.style.backgroundColor = 'aqua'\r\n    taskContainer.style.width = '100%'\r\n    taskContainer.style.height = '50px'\r\n    taskContainer.className = 'task-container'\r\n    taskContainer.setAttribute('data-id', tasks.length - 1);\r\n    \r\n    const div1 = document.createElement('div')\r\n    const circle = document.createElement('input')\r\n    circle.setAttribute('type','checkbox')\r\n    const p1 = document.createElement('p')\r\n    p1.textContent = title\r\n    \r\n    const div2 = document.createElement('div')\r\n    const p2 = document.createElement('p')\r\n    p2.textContent = dueDate\r\n    const img1 = document.createElement('img')\r\n    img1.src = '/dist/image/edit-text.png'\r\n    img1.className = 'edit'\r\n    img1.addEventListener('click', () => showEditModal(taskContainer.getAttribute('data-id')));\r\n\r\n    const img2 = document.createElement('img')\r\n    img2.src = '/dist/image/delete.png'\r\n    img2.className = 'delete-btn'\r\n    img2.addEventListener('click',onDelete)\r\n\r\n\r\n    const img3 = document.createElement('img')\r\n    img3.src = '/dist/image/document.png'\r\n    img3.className = 'info'\r\n    img3.addEventListener('click', () => showTaskInfoModal(taskContainer.getAttribute('data-id')));\r\n\r\n    \r\n    container.appendChild(taskContainer)\r\n    taskContainer.append(div1,div2)\r\n    div1.append(circle,p1)\r\n    div2.append(p2,img1,img2,img3)\r\n\r\n    console.log(tasks)    \r\n\r\n}\r\n\r\n\r\nfunction onDelete(e){\r\n    if(!e.target.classList.contains('delete-btn')){\r\n        return;\r\n    }\r\n\r\n    const btn = e.target;\r\n    const taskContainer = btn.closest('.task-container');\r\n    const index = parseInt(taskContainer.getAttribute('data-id'));\r\n\r\n    if (!isNaN(index)) {\r\n        tasks.splice(index, 1); \r\n        taskContainer.remove();\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction addTaskModal(){\r\n    const modalAdd = document.createElement('div')\r\n    modalAdd.className = 'modal-add'\r\n\r\n    const addContainer = document.createElement('div')\r\n    addContainer.className = 'add-container'\r\n\r\n    const head = document.createElement('div')\r\n    head.className = 'head'\r\n\r\n    const addTitle = document.createElement('h1')\r\n    addTitle.innerHTML = 'Add Task'\r\n\r\n    const p = document.createElement('p')\r\n    p.innerHTML = 'X'\r\n    p.className = 'close'\r\n    \r\n\r\n    const form = document.createElement('form')\r\n    form.id = 'form'\r\n    form.method = 'POST'\r\n    form.setAttribute('name','form')\r\n    form.autocomplete = 'off'\r\n\r\n    const div1 = document.createElement('div')\r\n\r\n    const p1 = document.createElement('p')\r\n    p1.innerHTML = \"Title*\"\r\n\r\n    const titleInput = document.createElement('INPUT')\r\n    titleInput.setAttribute('type','text')\r\n    titleInput.id = 'title-input'\r\n\r\n    const div2 = document.createElement('div')\r\n\r\n    const p2 = document.createElement('p')\r\n    p2.innerHTML = 'Description'\r\n\r\n    const description = document.createElement('TEXTAREA')\r\n    description.maxLength = \"1000\"\r\n    description.cols = \"40\"\r\n    description.rows = \"5\"\r\n    description.id = 'description'\r\n\r\n    const div3 = document.createElement('div')\r\n\r\n    const p3 = document.createElement('p')\r\n    p3.innerHTML = 'Due date'\r\n\r\n    const date = document.createElement('INPUT')\r\n    date.setAttribute('type','date')\r\n    date.id = 'due-date'\r\n\r\n    const div4 = document.createElement('div')\r\n\r\n    const p4 = document.createElement('p')\r\n    p4.innerHTML = 'Priority'\r\n\r\n    const select = document.createElement('select')\r\n    select.id = 'priority'\r\n\r\n    const option = document.createElement('option')\r\n    option.selected = true\r\n    option.disabled = true\r\n    option.text = 'How important is this task?'\r\n    \r\n\r\n    const option1 = document.createElement('option')\r\n    option1.setAttribute('value', 'Not important at all..')\r\n    option1.text = 'ðŸ˜´ Not important at all..'\r\n\r\n    const option2 = document.createElement('option')\r\n    option2.setAttribute('value', 'A bit important')\r\n    option2.text = 'ðŸ˜… A bit important'\r\n\r\n    const option3 = document.createElement('option')\r\n    option3.setAttribute('value', 'Super important!')\r\n    option3.text = 'ðŸ˜² Super important!'\r\n\r\n    const hr = document.createElement('hr')\r\n\r\n\r\n    const btn = document.createElement('div')\r\n    btn.className = 'btn'\r\n\r\n    const cancelBtn = document.createElement('button')\r\n    cancelBtn.id = 'cancel-btn'\r\n    cancelBtn.textContent = 'Cancel'\r\n\r\n    const addBtn = document.createElement('button')\r\n    addBtn.id = 'add-btn'\r\n    addBtn.textContent = 'Add'\r\n\r\n    modalAdd.appendChild(addContainer)\r\n    addContainer.append(head,form,hr,btn) \r\n    form.append(div1,div2,div3,div4)\r\n    div1.append(p1,titleInput)\r\n    div2.append(p2,description)\r\n    div3.append(p3,date)\r\n    div4.append(p4,select)\r\n    head.append(addTitle,p)\r\n    select.append(option,option1,option2,option3)\r\n    btn.append(cancelBtn,addBtn)\r\n\r\n    return modalAdd\r\n}\r\n\r\nfunction cancel (){\r\n    document.getElementsByClassName('modal-add')[0].style.display = 'none'\r\n}\r\n\r\n\r\nwindow.onload = () => {\r\n    const cancelBtn = document.getElementById('cancel-btn').addEventListener('click', cancel)\r\n    const close = document.getElementsByClassName('close')[0].addEventListener('click', cancel)\r\n    document.getElementById('add-btn').addEventListener('click', () => {\r\n        addTask()\r\n        cancel()\r\n    })\r\n    const cancelBtnInfo = document.getElementById('cancel-btn-info').addEventListener('click',()=>{\r\n        document.getElementsByClassName('modal-task-info')[0].style.display='none'\r\n    })\r\n\r\n}\r\n\r\nconst add = document.getElementsByClassName('add')[0].addEventListener('click', () => document.getElementsByClassName('modal-add')[0].style.display = 'block')\r\n\r\n\r\n\r\ndocument.body.appendChild(addTaskModal())\r\n\r\n\r\n\r\n\r\nfunction taskInfoModal(){\r\n\r\n    const modalTaskInfo = document.createElement('div')\r\n    modalTaskInfo.className = 'modal-task-info'\r\n\r\n    const infoContainer = document.createElement('div')\r\n    infoContainer.className = 'info-container'\r\n\r\n    const head = document.createElement('div')\r\n    head.className = 'head'\r\n\r\n    const addTitle = document.createElement('h1')\r\n    addTitle.innerHTML = 'Task Info'\r\n\r\n    const p = document.createElement('p')\r\n    p.innerHTML = 'X'\r\n    p.addEventListener('click', hideTaskInfoModal);\r\n\r\n    const div1 = document.createElement('div')\r\n\r\n    const p1 = document.createElement('p')\r\n    p1.innerHTML = \"Title:\"\r\n    \r\n\r\n    const titleInput = document.createElement('p')\r\n    titleInput.className = 'titleInput';\r\n\r\n    const hr1 = document.createElement('hr')\r\n\r\n    const div2 = document.createElement('div')\r\n\r\n    const p2 = document.createElement('p')\r\n    p2.innerHTML = 'Description:'\r\n\r\n    const description = document.createElement('p')\r\n    description.className = 'description';\r\n    \r\n    const hr2 = document.createElement('hr')\r\n\r\n    const div3 = document.createElement('div')\r\n\r\n    const p3 = document.createElement('p')\r\n    p3.innerHTML = 'Due date:'\r\n\r\n    const date = document.createElement('p')\r\n    date.className = 'date';\r\n\r\n    const hr3 = document.createElement('hr')\r\n\r\n    const div4 = document.createElement('div')\r\n\r\n    const p4 = document.createElement('p')\r\n    p4.innerHTML = 'Priority:'\r\n\r\n    const select = document.createElement('p')\r\n    select.className = 'priority';\r\n \r\n\r\n    const hr4 = document.createElement('hr')\r\n\r\n    const btn = document.createElement('div')\r\n    btn.className = 'btn'\r\n\r\n    const cancelBtn = document.createElement('button')\r\n    cancelBtn.id = 'cancel-btn-info'\r\n    cancelBtn.textContent = 'Cancel'\r\n    cancelBtn.addEventListener('click', (event) => {\r\n        if (event.target.id === 'cancel-btn-info') {\r\n            hideTaskInfoModal();\r\n        }\r\n    });\r\n\r\n    modalTaskInfo.appendChild(infoContainer)\r\n    infoContainer.append(head,div1,hr1,div2,hr2,div3,hr3,div4,hr4,btn)\r\n    head.append(addTitle,p)\r\n    div1.append(p1,titleInput)\r\n    div2.append(p2,description)\r\n    div3.append(p3,date)\r\n    div4.append(p4,select)\r\n    btn.appendChild(cancelBtn)\r\n\r\n    return modalTaskInfo\r\n}\r\n\r\n\r\n\r\nfunction showTaskInfoModal(index) {\r\n    if (index >= 0 && index < tasks.length) {\r\n        const task = tasks[index];\r\n\r\n        \r\n        modalInfo.querySelector('.titleInput').textContent = task.title;\r\n        modalInfo.querySelector('.description').textContent = task.description;\r\n        modalInfo.querySelector('.date').textContent = task.dueDate;\r\n        modalInfo.querySelector('.priority').textContent = task.priority;\r\n\r\n       \r\n        modalInfo.style.display = 'block';\r\n    }\r\n}\r\n\r\nfunction hideTaskInfoModal() {\r\n    modalInfo.style.display = 'none';\r\n}\r\n\r\n\r\n\r\nfunction modalEdit(){\r\n    const modalEdit = document.createElement('div')\r\n    modalEdit.className = 'modal-edit'\r\n\r\n    const editContainer = document.createElement('div')\r\n    editContainer.className = 'edit-container'\r\n\r\n    const head = document.createElement('div')\r\n    head.className = 'head'\r\n\r\n    const addTitle = document.createElement('h1')\r\n    addTitle.innerHTML = 'Edit Task'\r\n\r\n    const p = document.createElement('p')\r\n    p.innerHTML = 'X'\r\n    p.addEventListener('click',hideEditModal)\r\n\r\n    const form = document.createElement('form')\r\n    form.id = 'form'\r\n    form.method = 'POST'\r\n    form.setAttribute('name','form')\r\n    form.autocomplete = 'off'\r\n\r\n    const div1 = document.createElement('div')\r\n\r\n    const p1 = document.createElement('p')\r\n    p1.innerHTML = \"Title*\"\r\n\r\n    const titleInput = document.createElement('INPUT')\r\n    titleInput.setAttribute('type','text')\r\n    titleInput.id = 'title-input'\r\n\r\n    const div2 = document.createElement('div')\r\n\r\n    const p2 = document.createElement('p')\r\n    p2.innerHTML = 'Description'\r\n\r\n    const description = document.createElement('TEXTAREA')\r\n    description.maxLength = \"1000\"\r\n    description.cols = \"40\"\r\n    description.rows = \"5\"\r\n    description.id = 'description'\r\n\r\n    const div3 = document.createElement('div')\r\n\r\n    const p3 = document.createElement('p')\r\n    p3.innerHTML = 'Due date'\r\n\r\n    const date = document.createElement('INPUT')\r\n    date.setAttribute('type','date')\r\n    date.id = 'due-date'\r\n\r\n    const div4 = document.createElement('div')\r\n\r\n    const p4 = document.createElement('p')\r\n    p4.innerHTML = 'Priority'\r\n\r\n    const select = document.createElement('select')\r\n    select.id = 'priority'\r\n\r\n    const option = document.createElement('option')\r\n    option.selected = true\r\n    option.disabled = true\r\n    option.text = 'How important is this task?'\r\n    \r\n\r\n    const option1 = document.createElement('option')\r\n    option1.setAttribute('value', 'Not important at all..')\r\n    option1.text = 'ðŸ˜´ Not important at all..'\r\n\r\n    const option2 = document.createElement('option')\r\n    option2.setAttribute('value', 'A bit important')\r\n    option2.text = 'ðŸ˜… A bit important'\r\n\r\n    const option3 = document.createElement('option')\r\n    option3.setAttribute('value', 'Super important!')\r\n    option3.text = 'ðŸ˜² Super important!'\r\n\r\n    const hr = document.createElement('hr')\r\n\r\n\r\n    const btn = document.createElement('div')\r\n    btn.className = 'btn'\r\n\r\n    const cancelBtn = document.createElement('button')\r\n    cancelBtn.id = 'cancel-btn-edit'\r\n    cancelBtn.textContent = 'Cancel'\r\n    const cancelBtnEdit = document.getElementById('cancel-btn-edit');\r\n    if (cancelBtnEdit) {\r\n        cancelBtnEdit.onclick = () => {\r\n            hideEditModal();\r\n        };\r\n    }\r\n\r\n\r\n    const editBtn = document.createElement('button')\r\n    editBtn.id = 'edit-btn'\r\n    editBtn.textContent = 'Edit'\r\n    editBtn.addEventListener('click', () => {\r\n        // Get updated values and edit the task\r\n        const updatedTitle = titleInput.value;\r\n        const updatedDescription = description.value;\r\n        const updatedDueDate = date.value;\r\n        const updatedPriority = select.value;\r\n\r\n        editTask(index, updatedTitle, updatedDescription, updatedDueDate, updatedPriority);\r\n\r\n        // Hide the edit modal\r\n        hideEditModal();\r\n    });\r\n\r\n    modalEdit.appendChild(editContainer)\r\n    editContainer.append(head,form,hr,btn) \r\n    form.append(div1,div2,div3,div4)\r\n    div1.append(p1,titleInput)\r\n    div2.append(p2,description)\r\n    div3.append(p3,date)\r\n    div4.append(p4,select)\r\n    head.append(addTitle,p)\r\n    select.append(option,option1,option2,option3)\r\n    btn.append(cancelBtn,editBtn)\r\n\r\n    return modalEdit\r\n}\r\n\r\ndocument.body.appendChild(modalEdit())\r\n\r\nfunction showEditModal(index) {\r\n    if (index >= 0 && index < tasks.length) {\r\n        const task = tasks[index];\r\n        const modalEditTitleInput = document.getElementById('title-input'); // ModificaÈ›i cu id-ul corespunzÄƒtor\r\n        const modalEditDescription = document.getElementById('description'); // ModificaÈ›i cu id-ul corespunzÄƒtor\r\n        const modalEditDueDate = document.getElementById('due-date'); // ModificaÈ›i cu id-ul corespunzÄƒtor\r\n        const modalEditPriority = document.getElementById('priority'); // ModificaÈ›i cu id-ul corespunzÄƒtor\r\n\r\n        // Setarea valorilor Ã®n cÃ¢mpurile modalei de editare\r\n        modalEditTitleInput.value = task.title;\r\n        modalEditDescription.value = task.description;\r\n        modalEditDueDate.value = task.dueDate;\r\n        modalEditPriority.value = task.priority;\r\n\r\n        \r\n        modallEdit.style.display = 'block';\r\n\r\n\r\n        const editBtn = document.getElementById('edit-btn');\r\n        editBtn.onclick = () => {\r\n            // Get updated values from the modal inputs\r\n            const updatedTitle = modalEditTitleInput.value;\r\n            const updatedDescription = modalEditDescription.value;\r\n            const updatedDueDate = modalEditDueDate.value;\r\n            const updatedPriority = modalEditPriority.value;\r\n\r\n            // Update the task in the tasks array\r\n            editTask(index, updatedTitle, updatedDescription, updatedDueDate, updatedPriority);\r\n\r\n            // Hide the modal after editing\r\n            hideEditModal();\r\n        };\r\n    }\r\n}\r\n\r\nfunction editTask(index, updatedTitle, updatedDescription, updatedDueDate, updatedPriority) {\r\n    if (index >= 0 && index < tasks.length) {\r\n        tasks[index].title = updatedTitle;\r\n        tasks[index].description = updatedDescription;\r\n        tasks[index].dueDate = updatedDueDate;\r\n        tasks[index].priority = updatedPriority;\r\n\r\n        // Update the UI to reflect the changes (if needed)\r\n        const taskContainer = document.querySelector(`.task-container[data-id=\"${index}\"]`);\r\n        if (taskContainer) {\r\n            const titleElement = taskContainer.querySelector('.title');\r\n            const dueDateElement = taskContainer.querySelector('.due-date');\r\n\r\n            // Update the content of title and dueDate elements\r\n            if (titleElement) titleElement.textContent = updatedTitle;\r\n            if (dueDateElement) dueDateElement.textContent = updatedDueDate;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction hideEditModal() {\r\n    modallEdit.style.display = 'none';\r\n}\r\n\n\n//# sourceURL=webpack://todolist/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;